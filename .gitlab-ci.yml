stages:
  - lint
  - unit_tests
  - test

variables:
  POSTGRES_USER: 'gfbio_collections'
  POSTGRES_PASSWORD: ''
  POSTGRES_DB: 'test_gfbio_collections'
  POSTGRES_HOST_AUTH_METHOD: trust
  CELERY_BROKER_URL: 'redis://redis:6379/0'

#flake8:
#  stage: lint
#  image: python:3.9-alpine
#  before_script:
#    - pip install -q flake8
#  script:
#    - flake8

build_image:
  stage: test
  image: docker/compose:latest # :1.29.2
  tags:
    - docker:20.10.7
  before_script:
    - docker info
  script:
    - docker build -t my-docker-image .
    - docker run my-docker-image /script/to/run/tests
#
#pytest:
#  stage: test
#  image: docker/compose:latest # :1.29.2
#  tags:
#    - docker:20.10.7
#  services:
#    - docker:dind
#  before_script:
#    - docker-compose -f local.yml build
#    # Ensure celerybeat does not crash due to non-existent tables
#    - docker-compose -f local.yml run --rm django python manage.py migrate
#    - docker-compose -f local.yml up -d
#  script:
#    - docker-compose -f local.yml run django pytest

