stages:
  - lint
  - unit_tests
  - test

variables:
  POSTGRES_USER: 'gfbio_collections'
  POSTGRES_PASSWORD: ''
  POSTGRES_DB: 'test_gfbio_collections'
  POSTGRES_HOST_AUTH_METHOD: trust
  CELERY_BROKER_URL: 'redis://redis:6379/0'

flake8:
  stage: lint
  image: python:3.9-alpine
  before_script:
    - pip install -q flake8
  script:
    - flake8
  tags:
    - collections

#build_image:
#  stage: test
#  image: docker/compose:latest # :1.29.2
#  tags:
#    - docker
#  before_script:
#    - docker info
#    - docker-compose -f local.yml build
#  script:
#    - docker-compose -f local.yml run django pytest

run_unit_tests:
  stage: unit_tests
  image: docker/compose:latest # :1.29.2
  services:
    - docker:dind
  before_script:
    - docker info
    #- docker-compose -f local.yml build
  script:
    #- rsync -a /home/gitlab-runner/.envs .
    - docker-compose -f local.yml build
  tags:
    - collections

pytest:
  stage: test
  image: docker/compose:latest # :1.29.2
  tags:
    - collections
  services:
    - docker:dind
  before_script:
    - docker info
    - docker-compose -f local.yml build
    # Ensure celerybeat does not crash due to non-existent tables
    - docker-compose -f local.yml run --rm django python manage.py migrate
    - docker-compose -f local.yml up -d
  script:
    - docker-compose -f local.yml run django pytest

